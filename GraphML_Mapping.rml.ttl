######################################################################################
# 1. Prefixes
######################################################################################

@prefix rr:     <http://www.w3.org/ns/r2rml#>.
@prefix rml:    <http://semweb.mmlab.be/ns/rml#> .
@prefix crml:    <http://semweb.mmlab.be/ns/crml#> .
@prefix ql:     <http://semweb.mmlab.be/ns/ql#> .

@prefix prov:	<http://www.w3.org/ns/prov#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms:<http://purl.org/dc/terms/> .


######################################################################################
# 2. Mapping Document Metadata
######################################################################################

[]  dcterms:title "GraphML to RML Mappings";
    dcterms:description "Describes an RML mapping from the GraphML output,
    					generated by the RML editor, to an RML document 
    					that represents the knowledge described by the users." ;
    dcterms:creator <http://semweb.mmlab.be/AnastasiaDimou> ;
    dcterms:contributor <http://semweb.mmlab.be/PieterHeyvaert> ;
    dcterms:created "2015-10-24"^^xsd:date;
    dcterms:modified "2016-02-08"^^xsd:date .


######################################################################################
# 3. Input Sources
######################################################################################

<#GraphML_EdgeInput>
	#rml:source "/home/pheyvaer/Developer/rmlp_server/graphML.xml" ;
	#rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/Input/BlankNode.xml" ;
	rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/Input/issue6/files/mapping.xml" ;
	rml:iterator "/graphml/graph/edge";
	rml:referenceFormulation ql:XPath.

<#GraphML_NodeInput>
	#rml:source "/home/pheyvaer/Developer/rmlp_server/graphML.xml" ;
	rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/Input/issue6/files/mapping.xml";
	rml:iterator "/graphml/graph/node";
	rml:referenceFormulation ql:XPath.

<#GraphML_DataInput>
	#rml:source "/home/pheyvaer/Developer/rmlp_server/graphML.xml" ;
	rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/Input/issue6/files/mapping.xml";
	rml:iterator "/graphml/graph";
	rml:referenceFormulation ql:XPath.


######################################################################################
# 4. Mapping Definitions
######################################################################################


# 4.1 Triples Map
######################################################################################


# 4.1.1 Triples Map Generator - all and child from RefObjeMap

<#TriplesMapGenerator_Source_Mapping>
	rml:logicalSource <#GraphML_EdgeInput> ;

	#Generates a resource for the Subject Map
	rr:subjectMap [
		rr:template "http://ex.com/triplesMap/TriplesMap_{@source}" ;
		rr:class rr:TriplesMap ] ;

	#Adds the logical source predicate and the Logical Source resource
	rr:predicateObjectMap [
		rr:predicate rml:logicalSource ;
		rr:objectMap [ 
			rr:parentTriplesMap <#LogicalSourceGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@source";
				rr:parent "@id" ] ] ] ;

	#Adds the subject map predicate and the Subject Map resource
	rr:predicateObjectMap [
		rr:predicate rr:subjectMap ;
		rr:objectMap [
			rr:parentTriplesMap <#SubjectMapGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@source" ;
				rr:parent "@id" ] ] ];

	#Adds the predicateObjectMap predicate and the Predicate Object Map resource
	#Only for plain Object Maps
	rr:predicateObjectMap [
		rr:predicate rr:predicateObjectMap ;
		rr:objectMap [ 
			rr:parentTriplesMap <#PredicateObjectMapGenerator_Mapping> ;
		] ];

	#Adds the predicateObjectMap predicate and the Predicate Object Map resource
	#Only for Referencing Object Maps
	rr:predicateObjectMap [
		rr:predicate rr:predicateObjectMap ;
		rr:objectMap [ rr:parentTriplesMap <#RefObj_PredicateObjectMapGenerator_Mapping> ] ] .


# 4.1.1 Triples Map Generator - Parent of RefObjMap

<#Parent_TriplesMapGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/triplesMap/TriplesMap_{@id}" ;
		rr:class rr:TriplesMap, rr:ParentTriplesMap ] ;

	rr:predicateObjectMap [
		rr:predicate rml:logicalSource ;
		rr:objectMap [ 
			rr:parentTriplesMap <#Parent_LogicalSourceGenerator_Mapping> ] ];
			#rr:joinCondition [
			#	rr:child "@target";
			#	rr:parent "@id" ] ] ];

	rr:predicateObjectMap [
		rr:predicate rr:subjectMap ;
		rr:objectMap [
			rr:parentTriplesMap <#SubjectMapGenerator_Mapping> ] ].
			#rr:joinCondition [
			#	rr:child "@target" ;
			#	rr:parent "@id" ] ] ] .


# 4.2 Subject Map
######################################################################################

<#SubjectMapGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/subjectMap/SubMap_{@id}" ;
		rr:class rr:SubjectMap ] ;

	rr:predicateObjectMap <#BlankNodeGenerator_Mapping> ;
	rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping>  .


# 4.3 Predicate Object Map
######################################################################################

# 4.3.1 Normal Predicate Object Map Generator

<#PredicateObjectMapGenerator_Mapping>
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/preObjMap/PredObjMap_{@target}" ;
		rr:class rr:PredicateObjectMap ] ;

	rr:predicateObjectMap [
		rr:predicate rr:predicateMap ;
		rr:objectMap [ 
			rr:parentTriplesMap <#PredicateMapGenerator_Mapping> ;
		] ] ;

	rr:predicateObjectMap [
		rr:predicate rr:objectMap ;
		rr:objectMap [
			rr:parentTriplesMap <#ObjectMapGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@target";
				rr:parent "@id" ] ] ] .


# 4.3.1 Predicate Object Map Generator for Referencing Object Map

<#RefObj_PredicateObjectMapGenerator_Mapping> 
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/preObjMap/RefPredObjMap_{@target}" ;
		rr:class rr:PredicateObjectMap ] ;

	rr:predicateObjectMap [
		rr:predicate rr:predicateMap ;
		rr:objectMap [ rr:parentTriplesMap <#PredicateMapGenerator_Mapping> ] ] ;

	#Generale Predicate Object Map
	rr:predicateObjectMap [
		rr:predicateMap [
			rr:constant rr:objectMap ;
			crml:booleanCondition [
				crml:condition "!match(%%field%%,\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\")" ;
				crml:binding [
					crml:variable "field" ;
					rml:reference "data[@key=\"d5\"]" ] ] 
		] ;
		rr:objectMap [
			rr:parentTriplesMap <#RefObjectMapGenerator_Mapping> ;

			rr:joinCondition [
				rr:child "@target";
				rr:parent "@id" ] ;
		] ] ;

	#Predicate Object Map for rdf:type
	rr:predicateObjectMap [
		rr:predicateMap [
			rr:constant rr:objectMap ;
			crml:booleanCondition [
				crml:condition "match(%%field%%,\"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\")" ;
				crml:binding [
					crml:variable "field" ;
					rml:reference "data[@key=\"d5\"]" ] ] 
		] ;
		rr:objectMap [
			rr:parentTriplesMap <#ClassGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@target";
				rr:parent "@id" ] ;
			] ].


# 4.4 Predicate Map
######################################################################################

<#PredicateMapGenerator_Mapping> 
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/predicateMap/PreMap_{@id}" ;
		rr:class rr:PredicateMap ] ;
		
	rr:predicateObjectMap <#ConstantPredicateGenerator_Mapping> ;
	rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping> .


# 4.5 Object Map
######################################################################################

<#ObjectMapGenerator_Mapping> 
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/objectMap/ObjMap_{@id}" ;
		crml:booleanCondition [
				crml:condition "match(%%field%%,\"literal\")" ;
				crml:binding [
					crml:variable "field" ;
					rml:reference "data[@key=\"d0\"]" ] ]
	];
		#rr:class rr:ObjectMap ] ;
	#rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping> ;
	rr:predicateObjectMap <#DatatypeGenerator_Mapping> ;
	rr:predicateObjectMap <#LanguageGenerator_Mapping> .


# 4.6 Term Maps 
######################################################################################

<#ClassGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/objectMap/Class_{@id}" ;
	];

	rr:predicateObjectMap [
		rr:predicate rr:constant ;
		rr:objectMap [
			rml:reference "data[@key=\"d5\"]" ;
			rr:termType rr:IRI
	] ].


# 4.6 Term Maps 
######################################################################################

<#BlankNodeGenerator_Mapping> 
	rr:predicate rr:termType ;
	rr:objectMap [
		rr:constant rr:BlankNode ;
		crml:booleanCondition [
			crml:condition "match(%%field%%,\"blank\")" ;
			crml:binding [
				crml:variable "field" ;
				rml:reference "data[@key=\"d0\"]" ] ]
	].

<#TemplateGenerator_Mapping>
	rr:predicate rr:template ;
	rr:objectMap [ rml:reference "data[@key=\"d4\"]" ].

<#ReferenceGenerator_Mapping>
	rr:predicate rml:reference ;
	rr:objectMap [ rml:reference "data[@key=\"d2\"]" ].

<#ConstantGenerator_Mapping>
	rr:predicate rr:constant ;
	rr:objectMap [ rml:reference "data[@key=\"d5\"]" ].

<#ConstantPredicateGenerator_Mapping>
	rr:predicate rr:constant ;
	rr:objectMap [ rml:reference "data[@key=\"d3\"]" ].

<#DatatypeGenerator_Mapping>
	rr:predicate rr:datatype ;
	rr:objectMap [ rml:reference "data[@key=\"d6\"]" ; rr:termType rr:IRI ].

<#LanguageGenerator_Mapping>
	rr:predicate rr:language ;
	rr:objectMap [ rml:reference "data[@key=\"d8\"]" ].


# 4.5 Referencing Object Map
######################################################################################

<#RefObjectMapGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/objectMap/RefObjMap_{@id}" ;
		rr:class rr:ObjectMap ;
		crml:booleanCondition [
				crml:condition "!match(%%field%%,\"literal\")" ;
				crml:binding [
					crml:variable "field" ;
					rml:reference "data[@key=\"d0\"]" ] ] ] ;

	rr:predicateObjectMap [
		rr:predicate rr:parentTriplesMap ;
		rr:objectMap [ 
			rr:parentTriplesMap <#Parent_TriplesMapGenerator_Mapping> ;
			#rr:parentTriplesMap <#TriplesMapGenerator_Source_Mapping>;
			rr:joinCondition [ 
				rr:parent "@id";
				rr:child "@id" ] 
				] ];

	rr:predicateObjectMap <#JoinConditionGenerator_Mapping> .

<#JoinConditionGenerator_Mapping>
	rr:predicateMap [
		rr:constant rr:joinCondition ;
	];
	rr:objectMap [ 
		rr:parentTriplesMap <#ParentChildConditionGenerator_Mapping> ;
		rr:joinCondition [
			rr:child "@id" ;
			rr:parent "@target" ;
		] ] .


<#ParentChildConditionGenerator_Mapping>
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [ 
		rr:template "http://ex.com/objectMap/Join_{@id}" ;
		#rr:termType rr:BlankNode ; 
		rr:class rr:JoinCondition ;
		#The problem is here
		crml:booleanCondition [
				crml:condition "hasField(%%field%%)" ;
				crml:binding [
					crml:variable "field" ;
					rml:reference "data[@key=\"d9\"]" ] ] 
		#crml:negationOf [
		#		crml:condition "hasField(%%field%%)" ;
		#		crml:binding [
		#			crml:variable "field" ;
		#			rml:reference "data[@key=\"d9\"]" ] ] 
	] ;

	rr:predicateObjectMap [
		rr:predicate rr:child ;
		rr:objectMap [ rml:reference "data[@key=\"d9\"]" ] ] ;

	rr:predicateObjectMap [
		rr:predicate rr:parent ;
		rr:objectMap [ rml:reference "data[@key=\"d10\"]" ] ] .


# 4.7 Logical Source
######################################################################################

<#SourceGenerator_Mapping>
	rr:predicate rml:source ;
	rr:objectMap [ rml:reference "data[@key=\"d7\"]" ].

<#ReferenceFormulationGenerator_Mapping>
	rr:predicate rml:referenceFormulation ;
	rr:objectMap  [ rr:constant ql:CSV ]. # that's also rr:object ql:CSV
 
<#LogicalSourceGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput>;
	rr:subjectMap [ 
		rr:template "http://ex.com/logicalSource/LogicalSource_{@id}" ;
		rr:class rml:LogicalSource ] ;
	rr:predicateObjectMap <#SourceGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceFormulationGenerator_Mapping> .


<#Parent_LogicalSourceGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput>;
	rr:subjectMap [ 
		rr:template "http://ex.com/logicalSource/LogicalSource_{@id}" ;
		rr:class rml:LogicalSource ] ;
	rr:predicateObjectMap <#SourceGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceFormulationGenerator_Mapping> .



######################################################################################
# 5. Mapping Document Metadata Generation
######################################################################################


<#MetadataGenerator_Mapping>
	rml:logicalSource <#GraphML_DataInput> ;

	rr:subjectMap [
		rr:termType rr:BlankNode ] ;

	rr:predicateObjectMap [
		rr:predicate dcterms:title ;
		rr:objectMap [
			rr:constant "... Mapping Document" ] ];

	rr:predicateObjectMap [
		rr:predicate dcterms:description ;
		rr:objectMap [
			rr:constant "Mapping Document for ..." ] ];

	rr:predicateObjectMap [
		# TODO: Change this to get the proper creator
		rr:predicate dcterms:creator ;
		rr:objectMap [
			rr:parentTriplesMap <#RMLeditorAgent_Mapping> ] ];

	rr:predicateObjectMap [
		rr:predicate dcterms:created ;
		rr:objectMap [
			rml:reference "data" ;
			rr:datatype xsd:date ] ] ;

	rr:predicateObjectMap [
		rr:predicate prov:wasGenerateBy ;
		rr:objectMap [
			rr:parentTriplesMap <#ProvActivity_Mapping> ] ] .


<#ProvActivity_Mapping>
	rml:logicalSource <#GraphML_DataInput> ;

	rr:subjectMap [
		rr:termType rr:BlankNode ;
		rr:class prov:Activity ] ;

	rr:predicateObjectMap [
		rr:predicate prov:wasAssociatedWith ;
		rr:objectMap [
			rr:parentTriplesMap <#RMLeditorAgent_Mapping> ] ] ;

	rr:predicateObjectMap [
		rr:predicate prov:wasAttributedTo ;
		rr:objectMap [
			rr:parentTriplesMap <#RMLeditorAgent_Mapping> ] ]. 


<#RMLeditorAgent_Mapping>
	rml:logicalSource <#GraphML_DataInput> ;

	rr:subjectMap [
		rr:constant <http://rml.io/RMLeditor> ;
		rr:class prov:Agent ] .