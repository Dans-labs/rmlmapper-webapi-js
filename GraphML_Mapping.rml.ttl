@prefix rr:     <http://www.w3.org/ns/r2rml#>.
@prefix rml:    <http://semweb.mmlab.be/ns/rml#> .
@prefix ql:     <http://semweb.mmlab.be/ns/ql#> .



<#GraphML_EdgeInput>
	rml:source "/home/pieter/Developer/rmlp_server/graphML.xml" ;
	#rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/graphML.xml" ;
	rml:iterator "/graphml/graph/edge";
	rml:referenceFormulation ql:XPath.

<#GraphML_NodeInput>
	rml:source "/home/pieter/Developer/rmlp_server/graphML.xml" ;
	#rml:source "/media/andimou/723A1FC53A1F856F/Ubuntu_Documents/MappingDocs/GraphML/graphML.xml";
	rml:iterator "/graphml/graph/node";
	rml:referenceFormulation ql:XPath.


<#TriplesMapGenerator_Mapping>
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/triplesMap/TriplesMap_{@source}" ;
		rr:class rr:TriplesMap ] ;

	rr:predicateObjectMap [
		rr:predicate rr:subjectMap ;
		rr:objectMap [
			rr:parentTriplesMap <#SubjectMapGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@source" ;
				rr:parent "@id" ] ] ];

	rr:predicateObjectMap [
		rr:predicate rr:predicateObjectMap ;
		rr:objectMap [ rr:parentTriplesMap <#PredicateObjectMapGenerator_Mapping> ] ];

	rr:predicateObjectMap [
		rr:predicate rml:logicalSource ;
		rr:objectMap [ 
			rr:parentTriplesMap <#LogicalSourceGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@source";
				rr:parent "@id" ] ] ].


<#SubjectMapGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/subjectMap/SubMap_{@id}" ;
		rr:class rr:SubjectMap ] ;

	rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping> .

<#PredicateObjectMapGenerator_Mapping>
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/subjectMap/PredObjMap_{@target}" ;
		rr:class rr:PredicateObjectMap ] ;

	rr:predicateObjectMap [
		rr:predicate rr:predicateMap ;
		rr:objectMap [ rr:parentTriplesMap <#PredicateMapGenerator_Mapping> ] ] ;

	rr:predicateObjectMap [
		rr:predicate rr:objectMap ;
		rr:objectMap [
			rr:parentTriplesMap <#ObjectMapGenerator_Mapping> ;
			rr:joinCondition [
				rr:child "@target";
				rr:parent "@id" ] ] ].


<#PredicateMapGenerator_Mapping> 
	rml:logicalSource <#GraphML_EdgeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/subjectMap/PreMap_{@id}" ;
		rr:class rr:PredicateMap ] ;
		
	rr:predicateObjectMap <#ConstantPredicateGenerator_Mapping> ;
	rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping> .

<#ObjectMapGenerator_Mapping> 
	rml:logicalSource <#GraphML_NodeInput> ;

	rr:subjectMap [
		rr:template "http://ex.com/objectMap/ObjMap_{@id}" ;
		rr:class rr:ObjectMap ] ;
	rr:predicateObjectMap <#TemplateGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceGenerator_Mapping> ;
	rr:predicateObjectMap <#ConstantGenerator_Mapping> .


<#TemplateGenerator_Mapping>
	rr:predicate rr:template ;
	rr:objectMap [ rml:reference "data[@key=\"d4\"]" ].

<#ReferenceGenerator_Mapping>
	rr:predicate rml:reference ;
	rr:objectMap [ rml:reference "data[@key=\"d2\"]" ].

<#ConstantGenerator_Mapping>
	rr:predicate rr:constant ;
	rr:objectMap [ rml:reference "data[@key=\"d5\"]" ].

<#ConstantPredicateGenerator_Mapping>
	rr:predicate rr:constant ;
	rr:objectMap [ rml:reference "data[@key=\"d3\"]" ].

<#SourceGenerator_Mapping>
	rr:predicate rml:source ;
	rr:objectMap [ rml:reference "data[@key=\"d7\"]" ].

<#ReferenceFormulationGenerator_Mapping>
	rr:predicate rml:referenceFormulation ; 
	rr:objectMap  [ rr:constant ql:CSV ]. # that's also rr:object ql:CSV
 
<#LogicalSourceGenerator_Mapping>
	rml:logicalSource <#GraphML_NodeInput>;
	rr:subjectMap [ 
		rr:template "http://ex.com/logicalSource/LogicalSource_{@id}" ;
		rr:class rml:LogicalSource ] ;
	rr:predicateObjectMap <#SourceGenerator_Mapping> ;
	rr:predicateObjectMap <#ReferenceFormulationGenerator_Mapping> .
